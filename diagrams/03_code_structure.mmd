graph LR
    %% CODE STRUCTURE - IMPLEMENTATION PLAN
    
    %% EXISTING FILES - KEEP AS IS
    subgraph "✅ KEEP AS-IS (Working MuseTalk Components)"
        A1["musetalk/utils/face_detection/<br/>✅ FaceAlignment class<br/>✅ LandmarksType enum<br/>✅ S3FD detection"]
        
        A2["musetalk/utils/preprocessing.py<br/>✅ get_landmark_and_bbox_enhanced()<br/>✅ coord_placeholder<br/>✅ Enhanced preprocessing"]
        
        A3["musetalk/whisper/<br/>✅ WhisperModel<br/>✅ audio2feature()<br/>✅ Audio processing"]
        
        A4["musetalk/utils/utils.py<br/>✅ datagen_enhanced()<br/>✅ create_enhanced_batch()<br/>✅ Mixed batch handling"]
        
        A5["musetalk/models/vae.py<br/>✅ VAE encoder/decoder<br/>✅ Latent processing"]
        
        A6["musetalk/utils/blending.py<br/>✅ get_image()<br/>✅ Frame blending<br/>✅ Cutaway passthrough"]
    end
    
    %% FILES TO MODIFY
    subgraph "🔄 MODIFY (Single Line Change)"
        B1["scripts/inference.py<br/>🔄 Line ~230: Replace UNet call<br/>🔄 Import hybrid_inference<br/>✅ Keep all other logic"]
        
        B2["app.py<br/>🔄 Same UNet replacement<br/>🔄 Import hybrid_inference<br/>✅ Keep all Gradio logic"]
    end
    
    %% NEW FILES TO CREATE  
    subgraph "🆕 CREATE NEW (Surgical Integration)"
        C1["scripts/hybrid_inference.py<br/>🆕 surgical_unet3d_inference()<br/>🆕 load_latentsync_unet3d()<br/>🆕 format_for_latentsync()<br/>🆕 format_for_musetalk()"]
        
        C2["test_hybrid_integration.py<br/>🆕 test_surgical_replacement()<br/>🆕 test_fallback_mechanism()<br/>🆕 test_quality_comparison()"]
    end
    
    %% LATENTSYNC COMPONENTS - USE SELECTIVELY
    subgraph "🔴 LATENTSYNC (Surgical Use Only)"
        D1["LatentSync/latentsync/models/unet.py<br/>🔴 UNet3DConditionModel<br/>🔴 Only this component!"]
        
        D2["LatentSync/configs/<br/>🔴 Model configuration<br/>🔴 Scheduler settings"]
    end
    
    %% ELIMINATED COMPONENTS
    subgraph "❌ SKIP COMPLETELY (Conflict Sources)"
        E1["❌ LatentSync preprocessing<br/>❌ LatentSync face detection<br/>❌ LatentSync full pipeline"]
        
        E2["❌ MMLab components<br/>❌ mmpose, mmcv, mmdet<br/>❌ DWPose integration"]
        
        E3["❌ Training components<br/>❌ TensorFlow dependencies<br/>❌ Tensorboard logging"]
    end
    
    %% CONNECTIONS
    A1 --> B1
    A2 --> B1
    A3 --> B1
    A4 --> B1
    A5 --> B1
    A6 --> B1
    
    B1 --> C1
    B2 --> C1
    
    C1 --> D1
    C1 --> D2
    
    C1 --> C2
    
    %% STYLING
    classDef keep fill:#90EE90,stroke:#006400,stroke-width:2px
    classDef modify fill:#FFE4B5,stroke:#FF8C00,stroke-width:2px
    classDef new fill:#87CEEB,stroke:#4682B4,stroke-width:2px
    classDef latentsync fill:#FFB6C1,stroke:#DC143C,stroke-width:2px
    classDef skip fill:#FFCCCB,stroke:#8B0000,stroke-width:2px
    
    class A1,A2,A3,A4,A5,A6 keep
    class B1,B2 modify
    class C1,C2 new
    class D1,D2 latentsync
    class E1,E2,E3 skip